#
# SPDX-License-Identifier: Apache-2.0
#
---
- name: Setup k8s resources for chaincode
  hosts: localhost
  vars_files:
    - ../config/common-vars.yml
    - ../config/digibank-vars.yml
    - ../config/ibmcloud-vars.yml
    - ../config/caas-vars.yml
    - ../config/auth-vars.yml
  vars:
    servicename: "{{ smart_contract_name }}-srvc"
    config_dir: "{{ home_dir }}/_cfg"
    peer_tls: "{{lookup('file','{{ config_dir }}/{{ peer_prefix }}_tls.json') | from_json }}"
    chaincode_tls: "{{lookup('file','{{ config_dir }}/{{ peer_prefix }}-{{ smart_contract_name }}-srvc.{{ namespace }}_tls.json') | from_json }}"
 
  tasks:
    - name: Setup the namepsace
      community.kubernetes.k8s:
        name: "{{ namespace }}"
        api_version: v1
        kind: Namespace
        state: present

    - name: Set service name and the peer certs
      set_fact:
        ca_root_cert: "{{ chaincode_tls.ca | b64decode | replace('\n','\\n') }}"
        peer_cert: "{{ peer_tls.cert | b64decode | replace('\n','\\n') }}"
        peer_key: "{{ peer_tls.private_key | b64decode | replace('\n','\\n') }}"
       
    - name: Debug hello
      debug: var=ca_root_cert

    - name: Create a Service object for the chaincode
      community.kubernetes.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Service
          metadata:
            namespace: "{{ namespace }}"
            name: "dbpeer1-{{ servicename }}"
            labels:
              app: "dbpeer1-{{ smart_contract_name }}"
          spec:
            ports:
              - name: chaincode
                port: 9999
                targetPort: 9999
                protocol: TCP
            selector:
              app: "dbpeer1-{{ smart_contract_name }}"
      register: srvcresult

    - name: Create a Service object for the chaincode
      community.kubernetes.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Service
          metadata:
            namespace: "{{ namespace }}"
            name: "dbpeer2-{{ servicename }}"
            labels:
              app: "dbpeer2-{{ smart_contract_name }}"
          spec:
            ports:
              - name: chaincode
                port: 9999
                targetPort: 9999
                protocol: TCP
            selector:
              app: "dbpeer2-{{ smart_contract_name }}"
      register: srvcresult


    # create the Connection.json that forms the core of the proxy contract
    - name: Create connection.json
      copy:
        content: "{{ lookup('template','ibp/15-connection-tls.json.j2') }}"
        dest: ./connection.json

    - name: Create the archive
      command: "{{ home_dir }}/scripts/pkgcc.sh -l {{ smart_contract_name}} -t external connection.json"
