#
# SPDX-License-Identifier: Apache-2.0
#
# Create the K8S Docker Registry secret
#
# This playbook is intended to replicate the following series of commands
#
# ibmcloud iam service-id-create demo-caas-id --description "Service ID for IBM Cloud Container Registry in Kubernetes caasdemo"
# ibmcloud iam service-policy-create demo-caas-id --roles Reader --service-name container-registry
# ibmcloud iam service-api-key-create demo-caas-key demo-caas-id --description "API key for service ID caasdemo" --file key.json
# DOCKER_PASSWORD=$(cat key.json | jq -r '.apikey')
# kubectl --namespace caasdemo create secret docker-registry pullimg-secret --docker-server=stg.icr.io --docker-username=iamapikey --docker-password=${DOCKER_PASSWORD} --docker-email=barney@flintstone.co
#
# Taken from the docmentation that is available at https://cloud.ibm.com/docs/containers?topic=containers-registry#other_registry_accounts
#

---
- name: Create the Docker Registry secret
  hosts: localhost
  collections:
   - ibm.cloudcollection
  vars_files:
    - ../config/ibp-vars.yml
    - ../config/ibp-org1-vars.yml
    - ../config/ibmcloud-vars.yml
  tasks:
    - name: Create Service ID
      ibm_iam_service_id:
        name: "{{ service_id }}"
        description: "Service ID for IBM Cloud Container Registry in Kubernetes caasdemo"
        region: "{{ region }}"
        state: "available"
        ibmcloud_api_key: "{{ cloud_api_key }}"
      register: idinfo
    
    # Based on if the service_id already exists or not, the return value is different
    # The difference between the 'id' and the 'iam_id' is that 'iam_id' has the prefix 'iam-'
    - name: Process API key - if the service id has not been created
      set_fact:
        iam_service_id: '{{ idinfo.resource.service_ids[0].id }}'
        iam_service_iamid: '{{ idinfo.resource.service_ids[0].iam_id }}'
      when: not idinfo.changed

    - name: Process API key - - if the service id has been created
      set_fact:
        iam_service_id: '{{ idinfo.resource.id }}'
        iam_service_iamid: '{{ idinfo.resource.iam_id }}'
      when: idinfo.changed

    - name: Debug
      ansible.builtin.debug:
        msg: "{{ iam_service_id }}    {{iam_service_iamid}}"

    # - name: Create Service Policy
    #   command: ibmcloud iam service-policy-create {{ iam_service_id }} --roles Reader --service-name container-registry

    - name: Create Service Policy
      ibm_iam_service_policy:
        roles: Reader
        state: "available"
        region: "{{ region }}"
        iam_service_id: "{{ iam_service_id }}"  
        ibmcloud_api_key: "{{ cloud_api_key }}"
        resources:
          - service: "container-registry"
      register: policy

    - name: Debug
      ansible.builtin.debug:
        msg: "{{ policy }} "

    - name: Query the Policy
      ibm_iam_service_policy_info:
        region: "{{ region }}"
        iam_service_id: "{{ iam_service_id }}"  
        ibmcloud_api_key: "{{ cloud_api_key }}"
      register: policy

    - name: Create the API key
      ibm_iam_service_api_key:
        state: "available"
        region: "{{ region }}"
        ibmcloud_api_key: "{{ cloud_api_key }}"
        name: "{{ key_name }}"
        iam_service_id: "{{ iam_service_iamid }}"  # this needs to have the prefix variant
      register: apikey
    - name: Debug
      ansible.builtin.debug:
        msg: "{{apikey }}"

    - name: Extract the API key
      set_fact:
          image_registry_password: '{{ apikey.resource.apikey }}'

    - name: Create the DockerRegistry secret
      community.kubernetes.k8s:
          state: present
          namespace: "{{ namespace }}"
          resource_definition: "{{ lookup('template', 'k8s/image_pull_secret.yml.j2') }}"
